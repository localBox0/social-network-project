{"version":3,"file":"static/js/110.5bacbd72.chunk.js","mappings":"wKACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAkH,iCAAlH,EAAsK,kCAAtK,EAAiO,wCAAjO,EAAoR,0BAApR,EAAwT,yB,SCOxT,EAJgB,SAACA,GACb,OAAO,gBAAKC,UAAWC,EAAhB,SAA4BF,EAAMG,W,UCa7C,EARmB,SAACH,GAChB,IAAII,EAAO,YAAcJ,EAAMK,GAC/B,OAAO,iBAAKJ,UAAWC,EAAhB,WACH,gBAAKI,IAAI,sGACT,SAAC,KAAD,CAASC,GAAIH,EAAMH,UARnB,SAAAO,GAAM,OAAIA,EAAOC,SAAWP,EAA2BA,GAQvD,SAA+CF,EAAMU,W,iDCqBvDC,GAAsBC,EAAAA,EAAAA,GAAiB,KAYvCC,GAAsBC,EAAAA,EAAAA,GAAU,CAClCC,KAAM,wBADkBD,EAVL,SAACd,GACpB,OACI,kBAAMgB,SAAUhB,EAAMiB,aAAtB,WACI,0BAAK,SAACC,EAAA,EAAD,CAAOC,YAAY,oBAAoBT,KAAK,iBACrCU,SAAU,CAACC,EAAAA,EAAUV,GAAsBW,UAAWC,EAAAA,OAClE,0BAAK,qDAWjB,EA3CgB,SAACvB,GACb,IAAIwB,EAAQxB,EAAMyB,YACdC,EAAkBF,EAAMG,SACvBC,KAAK,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAS1B,QAAS0B,EAAE1B,SAAc0B,EAAExB,OAC/CyB,EAAkBN,EAAMO,QACvBH,KAAK,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAiBL,GAAI2B,EAAE3B,IAAZ2B,EAAE3B,OAKhD,OAAKL,EAAMiC,QAGP,iBAAKhC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACK4B,KAEL,gBAAK7B,UAAWC,EAAhB,SACKwB,KAEL,SAACb,EAAD,CAAqBG,SAdT,SAACkB,GACjBlC,EAAMmC,YAAYD,EAAOE,uBAGH,SAAC,KAAD,CAAU7B,GAAG,Y,mBCC3C,GAAe8B,E,QAAAA,KAAQC,EAAAA,EAAAA,KAdD,SAACd,GACnB,MAAO,CACHC,YAAcD,EAAMC,YACpBQ,OAAQT,EAAMe,KAAKN,WAGF,SAACO,GACtB,MAAO,CACHL,YAAc,SAACC,GACXI,GAASC,EAAAA,EAAAA,GAAmBL,SAK6BM,EAAAA,EAArE,CAAuFC","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__XPD5e\",\"dialogsItems\":\"Dialogs_dialogsItems__1VJ6z\",\"dialogsItemsBox\":\"Dialogs_dialogsItemsBox__BAYre\",\"dialogsItemsLink\":\"Dialogs_dialogsItemsLink__h1M1s\",\"dialogsItemsActiveLink\":\"Dialogs_dialogsItemsActiveLink__gHggg\",\"messages\":\"Dialogs_messages__YjIM3\",\"message\":\"Dialogs_message__5j4k1\",\"messageWindow\":\"Dialogs_messageWindow__6KvLe\",\"sendMessageButton\":\"Dialogs_sendMessageButton__rs1Xf\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst SelectedLink = () => {\r\n    return (\r\n        select => select.isActive ? s.dialogsItemsActiveLink : s.dialogsItemsLink\r\n    );\r\n}\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return <div className={s.dialogsItemsBox}>\r\n        <img src='https://static.probusiness.io/720x480c/n/03/d/38097027_439276526579800_2735888197547458560_n.jpg' />\r\n        <NavLink to={path} className={SelectedLink()}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let messagesElement = state.messages\r\n        .map( m => <Message message={m.message} key={m.id}/>)\r\n    let dialogsElements = state.dialogs\r\n        .map( d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to='/login'/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElement}\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLengthCreator350 = maxLengthCreator(350)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field placeholder=\"Type your message\" name=\"newMessageBody\"\r\n                        validate={[required, maxLengthCreator350]} component={Textarea}/></div>\r\n            <div><button>Send message</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: \"dialogAddMessageForm\"\r\n})(AddMessageForm);\r\n\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage : state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage : (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"names":["props","className","s","message","path","id","src","to","select","isActive","name","maxLengthCreator350","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Textarea","state","dialogsPage","messagesElement","messages","map","m","dialogsElements","dialogs","d","isAuth","values","sendMessage","newMessageBody","compose","connect","auth","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}